TP : Durcir un projet Django _ BORDEAUX Marie-Charlotte

Etape 1 : Création du projet de test -> ok
Etape 2 : Page web de test -> ok
    creation de la page home + css + url afin d'afficher un template basique a l'écran
    -> ok
Etape 3 : Diagnostic de sécurité initial
    identifier les problèmes de sécurité actuels du projet.
    Apres avoir lancer la commande : python manage.py check --deploy > baseline.txt 2>&1
    Nous obtenons un fichier 'baseline.txt' pour voir les avertissements/erreurs de sécurité que Django détecte.
    Cette etape permet de durcir l'application en repérant les failles de sécurité.
    Exemple : 3 Warning
--->  (security.W018) You should not have DEBUG set to True in deployment.
        DEBUG=True → Django tourne en mode debug.
        Nous sommes toujours en developpement. Mais en déploiement, il faudra DEBUG=False.
--->  (security.W018) You should not have DEBUG set to True in deployment.
        SESSION_COOKIE_SECURE non activé
        Les cookies de session ne sont pas marqués “Secure”.
        Sera corrigé en mettant SESSION_COOKIE_SECURE = True (en prod).
---> (security.W009) Your SECRET_KEY has less than 50 characters, less than 5 unique characters, or it's prefixed with 'django-insecure-' indicating that it was generated automatically by Django. Please generate a long and
random value, otherwise many of Django's security-critical features will be vulnerable to attack.
        SECRET_KEY faible
        Django a généré une clé par défaut : django-insecure-xxxx.
        Il faut remplacer la secret-key par une clé plus longue et aléatoire, toujours dans le ''.env'.