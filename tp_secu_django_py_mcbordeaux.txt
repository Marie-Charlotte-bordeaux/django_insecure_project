TP : Durcir un projet Django _ BORDEAUX Marie-Charlotte

Etape 1 : Création du projet de test -> ok
Etape 2 : Page web de test -> ok
    creation de la page home + css + url afin d'afficher un template basique a l'écran
    -> ok
Etape 3 : Diagnostic de sécurité initial
    identifier les problèmes de sécurité actuels du projet.
    Apres avoir lancer la commande :
    _____ python manage.py check --deploy > baseline.txt 2>&1 _____

    Nous obtenons un fichier 'baseline.txt' pour voir les avertissements/erreurs de sécurité que Django détecte.
    Cette etape permet de durcir l'application en repérant les failles de sécurité.
    ~~> Retourne 6 WARNINGS : (security.W004), (security.W008), (security.W009),
    (security.W012), (security.W016), (security.W018)
    Exemple : 3 Warning
--->  (security.W018) You should not have DEBUG set to True in deployment.
        DEBUG=True → Django tourne en mode debug.
        Nous sommes toujours en developpement. Mais en déploiement, il faudra DEBUG=False.
--->  (security.W018) You should not have DEBUG set to True in deployment.
        SESSION_COOKIE_SECURE non activé
        Les cookies de session ne sont pas marqués “Secure”.
        Sera corrigé en mettant SESSION_COOKIE_SECURE = True (en prod).
---> (security.W009) Your SECRET_KEY has less than 50 characters, less than 5 unique characters, or it's prefixed with 'django-insecure-' indicating that it was generated automatically by Django. Please generate a long and
random value, otherwise many of Django's security-critical features will be vulnerable to attack.
        SECRET_KEY faible
        Django a généré une clé par défaut : django-insecure-xxxx.
        Il faut remplacer la secret-key par une clé plus longue et aléatoire, toujours dans le ''.env'.

Etape 4 : Configuration DEV/PROD
        Dans le settings.py :
            # SECURITY WARNING: keep the secret key used in production secret!
            SECRET_KEY = env('SECRET_KEY')

            #Varaiable pour activer le mode sécurisé
            DJANGO_SECURE = os.getenv('DJANGO_SECURE', 'False').lower() == 'true'

            #En production, DEBUG doit être FALSE
            DEBUG = not DJANGO_SECURE
            #DEBUG = env('DEBUG')

            # Domaines autorisés
            ALLOWED_HOSTS = ['127.0.0.1', 'localhost']
            #ALLOWED_HOSTS = env.list('ALLOWED_HOSTS', default=['127.0.0.1', 'localhost'])

            #Pour HTTPS local sur port 8443
            #CSRF_TRUSTED_ORIGINS = env.list('CSRF_TRUSTED_ORIGINS', default=[])
            CSRF_TRUSTED_ORIGGINS = [
                'https://127.0.0.1',
                'http://localhost',
                'http://localhost:8443',
            ]
        DEBUG doit être à FALSE en production par question de sécurité. Dans le but d'empecher
        aux utilisateurs malveillants d'accéder aux données sensibles de l'appilcation ou du site.
        Il est même recommander de mettre se paramettre dans le '.env' et de l'appelé dans le
        fichier 'settings.py'.

